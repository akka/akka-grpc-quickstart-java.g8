buildscript {
  repositories {
    mavenLocal()
    gradlePluginPortal()
  }

  dependencies {
    // see https://plugins.gradle.org/plugin/com.lightbend.akka.grpc.gradle
    // for the currently latest version.
    classpath 'com.lightbend.akka.grpc:akka-grpc-gradle-plugin:$akka_grpc_version$'
  }
}

plugins {
  id 'java'
  id 'application'
}

apply plugin: 'com.lightbend.akka.grpc.gradle'

repositories {
  mavenLocal()
  mavenCentral()
}

akkaGrpc {
  language = "Java"
  generateClient = true
  generateServer = true
}

// Define a separate configuration for managing the dependency on Jetty ALPN agent.
configurations {
  alpnagent
}

dependencies {
  compile 'com.typesafe.akka:akka-discovery_2.12:$akka_version$'
  compile 'com.typesafe.akka:akka-protobuf_2.12:$akka_version$'
  compile 'com.typesafe.akka:akka-stream_2.12:$akka_version$'

  testCompile 'junit:junit:4.12'
  testImplementation 'com.typesafe.akka:akka-stream-testkit_2.12:$akka_version$'
  testRuntime 'org.pegdown:pegdown:1.1.0'

  // Configuration for modules that use Jetty ALPN agent
  alpnagent 'org.mortbay.jetty.alpn:jetty-alpn-agent:$jetty_alpn_agent_version$'
}

test {
  jvmArgs "-javaagent:" + configurations.alpnagent.asPath
}

task runServer(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath

  main = 'com.example.helloworld.GreeterServer'

  jvmArgs "-javaagent:" + configurations.alpnagent.asPath
}


task runClient(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath

  main = 'com.example.helloworld.GreeterClient'

  // arguments to pass to the application
  if (project.hasProperty("GreeterClient.user"))
    args  project.getProperty("GreeterClient.user")
}

application {
  mainClassName = 'com.example.helloworld.GreeterServer'
}
